{
  "hash": "b62f201a06915727c67c2370e284899a",
  "result": {
    "markdown": "---\ntitle: \"Lesson 6: Visualising and Analysing Time-Oriented Data\"\nauthor: \"Dr. Kam Tin Seong<br/>Assoc. Professor of Information Systems (Practice)\"\ninstitute: \"School of Computing and Information Systems,<br/>Singapore Management University\"\ndate: \"2023-02-16\"\nformat: \n  revealjs:\n    width: 1600\n    height: 900\n    show-notes: false\n    slide-number: true\n    show-slide-number: 'all'\ndate-format: \"DD MMM YYYY\"\nexecute: \n  echo: true\n  eval: true\n  warning: false\neditor: visual\n---\n\n\n## What will you learn from this lesson?\n\n::: {style=\"font-size: 1.2em\"}\n-   Characteristics of time-series data\n\n-   Classic ways of graphing time\n\n-   Time-series patterns\n\n-   Time-series data visualization\n\n-   Interactive techniques for time-series data visualisation\n:::\n\n::: notes\nIn this lesson, I am going to share with you methods and best practice for visualising and analysing time-series data. It is organised into five main sections. First, we will examine different format of time series data. This is followed by a review of selected inspiring data visualisation for revealing time series patterns. In section three, we will examine different time-series patterns graphically. In section 4, I will introduce selected not so commonly used time-series data visualisation techniques. Lastly, in section 5, we will examine how interactivity and animation can be used to enhance visual time-series data discovery.\n:::\n\n## Characteristics of time-series data\n\n### A typical time-series data table\n\n![](img/image5-1.jpg)\n\n::: notes\nThe data table shows a typical time-series data. The first column contains the time series values in calender month and year. It is important to note that the values must not be in character data type. The next four columns are called time-series variables. They can be categorical or numeric data type.\n:::\n\n## Characteristics of time-series data\n\n### Not so friendly time-series data\n\n![](img/image5-2.jpg)\n\n::: notes\nThe data table in this slide is an example of time-series data which was not organised in machine understandable time-series manner. As shown on the slide earlier, a machine understandable time-series data must be organised in rows and columns whereby of of the column must contain the date/time values. In this example, the data need to be reformatted before they can be visualised.\n:::\n\n## Characteristics of time-series data\n\n### Not so friendly time-series data\n\n![](img/image5-3.jpg)\n\n::: notes\nThis slide shows a typical reporting table with many formatting features such as column sub-total, row sub-total, spacing, rows separators etc. Again, this table need to be tidied before it can be used to build tiem-series visualisation effectively.\n:::\n\n## Characteristics of time-series data\n\n### Not so friendly time-series data\n\n![](img/image5-4.jpg)\n\n::: notes\nThe table on the slide is another good example of not so friendly time-series data set. As you can see, the temporal field was splitted into three columns and the Year and Day fields are in numeric and Month field is in character. Also note that many rows for Year and Month fields were empty. In view of this, this data also need to be tidied before it can be used to build data visualisation.\n:::\n\n## A short visual history of time-series graphs\n\n### Playfair's Commercial and Political Atlas (1786)\n\n![](img/image5-5.jpg)\n\n::: {style=\"font-size: 0.6em\"}\nReference: William Playfair's [trade-balance time-series chart](https://en.wikipedia.org/wiki/William_Playfair), Commercial and Political Atlas, 1786.\n:::\n\n::: notes\nIn this section, I am going share with you five very well designed time-series data visualisation and hope they inspired you. The first data visualisation is Playfair's Commercial and Political Atlas (1786). This is not a typical time-series line graph. As you can see, the author put in conscious effort to shade the space between the import and export curve in order to reveal time interval with trade deficit and time interval with trade surplus.\n:::\n\n## A short visual history of time-series graphs\n\n### Playfair's Chewing at One View Chart (1821)\n\n![](img/image5-6.jpg)\n\n::: {style=\"font-size: 0.6em\"}\nReference: William Playfair's [Price of Wheat](https://wam.fandom.com/wiki/William_Playfair%27s_Price_of_Wheat)\n:::\n\n::: notes\nThis data visualisation is also a creation of William Playfair. It is make up of two graphical methods namely bar chart and line graph. Bar chart was used to show the price trend of the quarter of wheat and line graph was used to reveal wage trends of labour by the week.\n:::\n\n## A short visual history of time-series graphs\n\n### Bump Chart shows rank of the most populous cities at each census: 1790-1890\n\n![](img/image5-7.jpg){width=\"800\"}\n\n-   An interactive version [here](http://vallandingham.me/census_bump/)\n\n::: notes\nThis data visualisation shows rank of the most populous cities at each census 1790-1890. Instead of using lines, this data visualisation using ellipses. The more recent times were on the left of the data visualisation and the earlier times were on the right. Note that the original data visualisation was static.\n:::\n\n## A short visual history of time-series graphs\n\n### Multiple charts showing records of the Weather in New York City for December, 1912.\n\n![](img/image5-8.jpg)\n\n::: notes\nThis data visualisation shows record of the Weather in New York City for December, 1912. The bold line indicates temperature in degrees Fahrenheit. The light solid line shows wind velocity in miles per hour. The dotted line depicts relative humidity in percentage from readings taken at 8 a.m. and 8 p.m. Arrows portray the prevailing direction of the wind. Initials at the base of the chart show the weather conditions as follows: S, clear; PC, partly cloudy; C, cloudy; R, rain; Sn, snow.\n:::\n\n------------------------------------------------------------------------\n\n## Time-series graph that change public understading\n\n### The Hockey Stick Chart\n\n![](img/image5-45.jpg)\n\n::: {style=\"font-size: 0.6em\"}\nReference: Michael E. Mann, Raymond S. Bradley, Malcolm K. Hughes (1999) [\"Northern hemisphere temperatures during the past millennium: Inferences, uncertainties, and limitations\"](https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1029/1999GL900070). *Geophysical Research Letters*, Vol. 26, No. pp. 759-762.\n:::\n\n::: notes\nHockey stick graphs present the global or hemispherical mean temperature record of the past 500 to 2000 years as shown by quantitative climate reconstructions based on climate proxy records. These reconstructions have consistently shown a slow long term cooling trend changing into relatively rapid warming in the 20th century, with the instrumental temperature record by 2000 exceeding earlier temperatures. It is a good example of how data visualisation can be used to create global awareness of rapid warming in the 20th century.\n:::\n\n## Time-series data patterns\n\n::: {style=\"font-size: 1.2em\"}\n-   Trend\n\n-   Variability\n\n-   Rate of change\n\n-   Co-variation\n\n-   Cycles\n\n-   Exceptions\n:::\n\n::: notes\nIn this section, I am going share with you time-series characteristics reveal visually.\n:::\n\n------------------------------------------------------------------------\n\n### Time-series Patterns: Trend\n\n::: columns\n::: {.column width=\"30%\"}\n-   The overall or general direction of change in a series of time-series values is called the trend.\n:::\n\n::: {.column width=\"70%\"}\n![](img/image5-10.jpg)\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Time-series Patterns: Trend\n\n::: columns\n::: {.column width=\"30%\"}\n-   An upward trend.\n:::\n\n::: {.column width=\"70%\"}\n![](img/image5-11.jpg)\n:::\n:::\n\n::: notes\nThis line graph reveals an upward trend of monthly visitor arrivals from Vietnam between 2007-2018.\n:::\n\n------------------------------------------------------------------------\n\n### Time-series Patterns: Trend\n\n::: columns\n::: {.column width=\"30%\"}\n-   A mixed trends.\n:::\n\n::: {.column width=\"70%\"}\n![](img/image5-12.jpg)\n:::\n:::\n\n::: notes\nThis line graph, on the other, reveals a mixed of upward and plateau trends of monthly visitor arrivals from Malaysia between 2007-2018.\n:::\n\n------------------------------------------------------------------------\n\n### Time-series Patterns: Variability\n\n-   The average degree of change from one point of time to the next throughout a particular span of time.\n\n::: columns\n::: {.column width=\"50%\"}\n![](img/image5-13.jpg)\n:::\n\n::: {.column width=\"50%\"}\n![](img/image5-14.jpg)\n:::\n:::\n\n::: notes\nIn order to show variability, we should avoid using a highly aggregated time interval like the line graph shown on the left of the slide.\n:::\n\n------------------------------------------------------------------------\n\n### Time-series Patterns: Cycles\n\n::: columns\n::: {.column width=\"50%\"}\n-   Cycles are patterns that repeat at regular intervals.\n\n-   From the line graph, we can see that visitor arrivals from United Kingdom reach its peak on January and lowest on May every year.\n:::\n\n::: {.column width=\"50%\"}\n![](img/image5-15.jpg)\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Time-series Patterns: Rate of change\n\n::: columns\n::: {.column width=\"40%\"}\n-   The percentage difference between one value to the next value.\n:::\n\n::: {.column width=\"60%\"}\n![](img/image5-16.jpg){width=\"800\"}\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Time-series Patterns: Exceptions\n\n::: columns\n::: {.column width=\"40%\"}\n-   Values that fall outside the norm.\n:::\n\n::: {.column width=\"60%\"}\n![](img/image5-18.jpg)\n\nThis line graph show the significant impact of SAR on the visitor arrivals pattern to Singapore.\n:::\n:::\n\n## Line graph design tips\n\n### Not all line graphs should start at zero!\n\n::: columns\n::: {.column width=\"50%\"}\n![](img/image5-42a.jpg)\n:::\n\n::: {.column width=\"50%\"}\n![](img/image5-42b.jpg)\n:::\n:::\n\n::: notes\nIn this section, I am going to share with you some tips when we want to visualise time-series data. This slide shows that by keeping the y-axis starts at zero might not be able to reveal time-series patterns or trends effectivelly. Hence, it is important to customise the y-axis in search a way that it can reveal the time-series patterns effectively like the line graph on the right of the slide.\n:::\n\n## Line graph design tips\n\n### Multiple lines in a single graph is less effective than trellis line graph\n\n::: columns\n::: {.column width=\"50%\"}\n![](img/image5-43a.jpg)\n:::\n\n::: {.column width=\"50%\"}\n![](img/image5-43b.jpg)\n:::\n:::\n\n::: notes\nIn order to support effective comparison, sometime trellis line graphs are more functional then a composite line graph as shown on the right of the slide.\n:::\n\n## Line graph design tips\n\n### Not all time-series graphs have time on the x-axis\n\n![](img/image5-44.jpg)\n\n::: {style=\"font-size: 0.6em\"}\nSource: [Are emerging economies deindustrializing too quickly?](https://ourworldindata.org/growth-and-structural-transformation-are-emerging-economies-industrializing-too-quickly).\n:::\n\n::: notes\nThe **connected scatter plot** below reveals changes over time by joining each time event points on the scatter plot. The historical trail can be a effective alternative to animation.\n:::\n\n## Line graph design tips\n\n### Label line graph instead of using legend\n\n::: columns\n::: {.column width=\"50%\"}\n![](img/image5-41a.jpg)\n:::\n\n::: {.column width=\"50%\"}\n![](img/image5-41b.jpg)\n:::\n:::\n\n::: notes\nWhen ever possible, it is more effective to label on the line directly as shown on the line graph on the right instead of using legend.\n:::\n\n## Line graph design tips\n\n-   In order to support comparison over time effectively, reference line should be used.\n\n::: columns\n::: {.column width=\"50%\"}\n### Line chart without reference line\n\n![](img/image5-19.jpg)\n:::\n\n::: {.column width=\"50%\"}\n### Line chart with reference line\n\n![](img/image5-20.jpg)\n:::\n:::\n\n## Line graph design tips\n\n### Line chart with reference band\n\n::: columns\n::: {.column width=\"40%\"}\nThe reference used don't have to confine a single line. A confidence interval or quantile range can be used too.\n:::\n\n::: {.column width=\"60%\"}\n![](img/image5-21.jpg){width=\"850\"}\n:::\n:::\n\n## Beyond Line Graph\n\n### Control Chart: An analytical line chart\n\n::: columns\n::: {.column width=\"50%\"}\nControl charts, also known as Shewhart charts (after Walter A. Shewhart) or process-behavior charts. They are a statistical process control tool used to determine if a manufacturing or business process is in a state of control. Beside the average line, there are two additional lines namely the upper control limit (UCL) and lower control limit (LCL). Any data points located beyond UCL or LCL will be flag out as anomalies.\n:::\n\n::: {.column width=\"50%\"}\n![](img/image5-22.jpg)\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Control chart in real world\n\n![](img/image5-23.jpg)\n\n::: notes\nIn this use-case, control chart was used to display numbers of views of a digital news platform. Notice that two sets of reference lines were used. One for 5 and 95 percentile and upper and lower quantile.\n:::\n\n## Challenge I: Visualising Change between Two Points in Time\n\n### Bar chart method\n\n![](img/image5-27.jpg)\n\n## Slopegraphs come to rescue!\n\n::: columns\n::: {.column width=\"40%\"}\nSlopegraphs compare changes usually over time for a list of nouns located on an ordinal or interval scale.\n\n::: {style=\"font-size: 0.6em\"}\nReference: [Slopegraphs for comparing gradients: Slopegraph theory and practice](http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0003nk)\n:::\n:::\n\n::: {.column width=\"60%\"}\n![](img/image5-28.jpg){width=\"750\"}\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Learning from the Master\n\nVisit [Tableau Public](https://public.tableau.com/views/Slopegraphs/Slopegraphs?%3Aembed=y&%3AshowVizHome=no&%3Adisplay_count=y&%3Adisplay_static_image=y&%3AbootstrapWhenNotified=true&%3Alanguage=en&%3Amobile=true&:embed=y&:showVizHome=n&:apiID=host0) to try out the interactive version and visit this [link](https://dataremixed.com/2013/12/slopegraphs-in-tableau/) to learn more.\n\n![](img/image5-28b.jpg)\n\n## Challenge II: Visualising cyclical patterns\n\n### Classic line graph method\n\n![](img/image5-29.jpg)\n\n## Challenge II: Visualising cyclical patterns\n\n### Solution: Cycle plot\n\n![](img/image5-30.jpg)\n\n::: {style=\"font-size: 0.6em\"}\nReference: [Intro to Cycle Plot](http://www.perceptualedge.com/articles/guests/intro_to_cycle_plots.pdf)\n:::\n\n## Challenge II: Visualising cyclical patterns\n\n### Solution: Sunburst diagram method\n\n![](img/image5-31.jpg)\n\n## Challenge III: Massive Time-series Data\n\n### Classic line graph method\n\n![](img/image5-32.jpg)\n\n::: notes\nLine graph will not be effective to reveal high number of time series lines (for example 50)\n:::\n\n## Challenge III: Massive Time-series Data\n\n### Solution: Horizon graph\n\n::: columns\n::: {.column width=\"40%\"}\nBy dividing an area chart into consecutive layers, horizon graphs present time-series data in a compact space while preserving resolution.\n:::\n\n::: {.column width=\"60%\"}\n![](img/image5-33.jpg)\n\n::: {style=\"font-size: 0.6em\"}\nReference: [Time on the Horizon](https://www.perceptualedge.com/articles/visual_business_intelligence/time_on_the_horizon.pdf)\n:::\n:::\n:::\n\n------------------------------------------------------------------------\n\n### The basic construct of a horizon graph\n\n::: columns\n::: {.column width=\"50%\"}\nFigure on the right shows the process of constructing an horizon graph.\n\n::: {style=\"font-size: 0.6em\"}\nReference: [The Developmentof the Horizon Graph](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=3556C47AD33B1577060EEA3F409ECD32?doi=10.1.1.363.5396&rep=rep1&type=pdf)\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](img/image5-34.jpg)\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Horizon graph in Tableau\n\n![](img/image5-40.jpg)\n\n::: {style=\"font-size: 0.6em\"}\nSource: [Unemployment Horizon Chart](https://public.tableau.com/en-us/gallery/unemployment-horizon-chart).\n:::\n\nThis [video](https://www.tableau.com/learn/tutorials/on-demand/horizon-charts) provides step-by-step explanation on how to create a horizon graph using Tableau.\n\n## Challenge IV: Distribution over time\n\n::: columns\n::: {.column width=\"50%\"}\n### Line graph method\n\n![](img/image5-35.jpg)\n:::\n\n::: {.column width=\"50%\"}\n### Boxplot method\n\n![](img/image5-36.jpg)\n:::\n:::\n\n## Alternative Time-series Data Visualisation methods: Calendar Heatmap\n\n::: columns\n::: {.column width=\"40%\"}\nIt is a 2-dimensional calendar view that shows a value over time through color coding it, often with warmer colors indicating higher values (hence heatmap).\n:::\n\n::: {.column width=\"60%\"}\n![](img/image5-38.jpg)\n\n::: {style=\"font-size: 0.6em\"}\nSource: [Calender heatmap](http://mbostock.github.io/d3/talk/20111018/calendar.html)\n:::\n:::\n:::\n\n## Alternative Time-series Data Visualisation methods\n\n### Stream Graph (also know as ThemeRiver)\n\n::: columns\n::: {.column width=\"40%\"}\nA streamgraph, or stream graph, is a type of stacked area graph which is displaced around a central axis, resulting in a flowing, organic shape.\n:::\n\n::: {.column width=\"60%\"}\n![](img/image5-37.jpg)\n\n::: {style=\"font-size: 0.6em\"}\nReference: [Steam graph](https://datavizcatalogue.com/methods/stream_graph.html)\n:::\n:::\n:::\n\n## Visualising Change Over Time\n\n### Animated bubble plot (or motion chart)\n\n::: columns\n::: {.column width=\"40%\"}\nA motion chart displays changes over time by showing movement within the two-dimensional space and changes in the size and color of the bubbles.\n:::\n\n::: {.column width=\"60%\"}\n![](img/image5-39.jpg)\n:::\n:::\n\n## References\n\nClaus. O. Wilke (2019) **Fundamentals of Data Visualisation**, O'Reilly. USA. [Chapter 13 Visualizing time series and other functions of an independent variable](https://clauswilke.com/dataviz/time-series.html) and [Chapter 14 Visualizing trends](https://clauswilke.com/dataviz/visualizing-trends.html)\n\n[Introduction to Cycle Plots](http://www.perceptualedge.com/articles/guests/intro_to_cycle_plots.pdf)\n\n[Slopegraphs for comparing gradients: Slopegraph theory and practice](http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0003nk)\n\n[The Development of the Horizon Graph](http://www.stonesc.com/Vis08_Workshop/DVD/Reijner_submission.pdf)\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}